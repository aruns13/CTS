# AUTHOR  : ARUN S
# CREATED : 04-23-2019
# UPDATED : 06-14-2019
# COMMENT : This code is used to convert JSON/XML files to CSV 
# VERSION : 1.0
# CHANGE LOG:      
#04/12/2018: Version 1.0
#Configuration file details:           
# >> File/Folder List: List of file/folder whose size has to be checked
# >> Mailing details: From address, To address, SMTP server and Port and Mail-subject
#>
#LogFile Path


$DateAndTime=Get-Date -format "dd-MM-yyyy HH-mm"

function Json2CSV
    {
        param([string] $jsonFilePath,
              [string] $csvFilePath)
        $data  =  Get-Content -Path $jsonFilePath      
        ($data|Out-String|ConvertFrom-Json) | Export-Csv -NoTypeInformation -Path $csvFilePath
        $LogValue="CSV file saved at $csvFilePath"
        $TimeValue = Get-Date -format HH:MM
        Add-Content -Path $LogPath -Value "[$TimeValue]:$LogValue"        
            }
function XML2CSV
	{
		Param([string] $xmlFilePath,[string] $csvFilePath)
		$xlsSpreadsheet = 51
$Excel = New-Object -Com Excel.Application
$WorkBook = $Excel.Workbooks.Open($xmlFilePath)
$WorkBook.SaveAs($csvFilePath, $xlsSpreadsheet)
$Excel.Quit() 
$LogValue="Excel file saved at $csvFilePath"
        $TimeValue = Get-Date -format HH:MM
    Add-Content -Path $LogPath -Value "[$TimeValue]:$LogValue"
}

try
{

Write-Host 'Started Function'

#Read Data From Excel
$Date1 =Get-Date -format "dd-MM-yyyy"
$path = $LogPath+ $Date1 + ".txt"

$FilePath           =    "C:\Users\412988\Documents\ReusableScript_Dashboard.xlsm"
$SheetName          =    "JX2CSV"
$objExcel           =    New-Object -ComObject Excel.Application
$objExcel.Visible   =    $false
$WorkBook           =    $objExcel.Workbooks.Open($FilePath)
$WorkSheet          =    $WorkBook.sheets.item($SheetName)
$servername=$WorkSheet.Range("B10").Text
$SMTPServer=$WorkSheet.Range("B12").Text
$SMTPPort=$WorkSheet.Range("B13").Text
$Emailaddress=$WorkSheet.Range("B14").Text
$CC=$WorkSheet.Range("B15").Text
$BCC=$WorkSheet.Range("B16").Text
$Subj=$WorkSheet.Range("B17").Text
$mailbody=$WorkSheet.Range("B18").Text
$from=$WorkSheet.Range("B19").Text

$LogPath = $WorkSheet.Range("B20").Text


#Count number of rows

$WorksheetRange = $WorkSheet.UsedRange
$RowCount = $WorksheetRange.Rows.Count

Write-Host $path
Write-Host $LogPath
Write-Host $RowCount
#Read Data from Excel
for($i=23;$i -le $RowCount;$i++)
{
$fromPath =$WorkSheet.Range("A"+$i.ToString()).Text
$toPath   =$WorkSheet.Range("B"+$i.ToString()).Text
write-Host $fromPath
write-Host $ToPath
$attachments += $toPath
$extension = [system.IO.Path]::GetExtension($fromPath)
Write-Host $extension
$filename = [system.IO.Path]::GetFileNameWithoutExtension($fromPath)
Write-Host $filename
if ($extension -eq ".json")
{
Json2CSV -jsonFilePath $fromPath -csvFilePath $toPath
}
elseif($extension -eq ".xml")
{
XML2CSV -xmlFilePath $fromPath -csvFilePath $toPath
}   
     
}

$Folderpath = $WorkSheet.Range("B11").Text
[array]$attachments=Get-ChildItem $Folderpath

#Send mail with attachment to the stake holders

Write-Host $attachments.fullname
Write-Host $fromaddress
Write-Host $CC
$message = new-object System.Net.Mail.MailMessage 
$message=@{
From = $from
To=($Emailaddress) 
CC=($CC) 
Bcc=($BCC) 
Subject = $Subj.Trim()
Attachments = $attachments.fullname
body = $mailbody 
smtpserver =$SMTPServer
}
Send-MailMessage @message 
$objExcel.Workbooks.Close()
$objExcel.Quit()

Write-Host "Script executed successfully"

}

catch
{
    $line = $_.InvocationInfo.ScriptLineNumber
    $LogValue = "[Error] Caught an exception:`n"+"Exception Type: $($_.Exception.GetType().FullName)`n"+"Exception Message: $($_.Exception.Message)`n" + "line:$line"
    $TimeValue = Get-Date -format HH:MM
    Add-Content -Path $LogPath -Value "[$TimeValue]:$LogValue"
    $objExcel.Workbooks.Close()
    $objExcel.Quit()
    Write-Host "Script execution failed"
    
}
finally
{
    Write-Host 'Script Execution ends'
    
}
